//TODO:This autogenerated class includes the basics for a Registration
//Handler class. You will need to customize it to ensure it meets your needs and
//the data provided by the third party.

global class SSORegistrationHandler implements Auth.RegistrationHandler{
  class RegHandlerException extends Exception {}
    global User createUser(Id portalId, Auth.UserData data){
    List<User> users = [SELECT ID,User_ID__c FROM User Where User_ID__c = : data.email]; 
    User user = users.isEmpty() ? null : users[0]; 
    if (user==null){
      throw new RegHandlerException('Cannot find the user. For help, contact your administrator.');
     }
    else{  
     system.debug('Auth Email id passed by IDP:' + data.email);
     system.debug('Auth UserName passed by IDP:' + data.userName);
     return user;
    }   

}

global void updateUser(Id userId, Id portalId, Auth.UserData data){
    system.debug('Auth Userid passed by IDP in updateUser:' + userId);
    system.debug('Auth UserName passed by IDP in updateUser:' + data.userName);
    return;
 }
}